global proc setProjectFromFile()
{
    //get current project
    $currentProject = `workspace -q -rd`;
    //get file path
    string $fileName = `file -q -sceneName`;
    string $parts[];
    tokenize $fileName "/" $parts;
    string $rebuild = "";
    int $rebuildSwitch = 0;
    //rebuild path 
    for($item in $parts)
    {
        if($rebuildSwitch == 0 && $item != "scenes")
        {
            $rebuild += ($item+"/");
        }
        else
        {
            $rebuildSwitch = 1;
        }
    }
    //temporarilly set project
    setProject $rebuild;
}

global proc MakeMovie(string $imagePath, string $moviePath, int $camWidth, int $camHeight)
{
	string $ffmpegLocation = "C:\\ffmpeg\\bin\\ffmpeg.exe";
	string $frameRate = `currentTimeUnitToFPS`;
	string $submit = $ffmpegLocation+" -f image2 -y -framerate "+$frameRate+" -i "+toNativePath($imagePath)+" -s "+$camWidth+"x"+$camHeight+" "+toNativePath($moviePath);

	if (`filetest -x $ffmpegLocation`)
	{
	    system($submit);
	    print ("saved movie "+$moviePath);
	}
	else
	{
	    print "ffmpeg does not exist at the path C:\\ffmpeg\\bin\\ffmpeg.exe";
	}
	 
	

}

global proc CacheBifrost(int $doCache, int $doPlayblast, int $doMesh)
{
    //get file properties
    setProjectFromFile();
    int $camWidth = `getAttr "defaultResolution.width"`;
	int $camHeight = `getAttr "defaultResolution.height"`;

	string $filename = `file -q -sn`;
	string $buffer[];
	tokenize $filename "." $buffer;
    string $newName = ($buffer[0]+"_cache");
    file -rename ($newName);

    $bifrostContainers = `ls -type "bifrostContainer"`;
    //make sure scene has bifrost nodes
    int $size = `size $bifrostContainers`;
    if ($size > 0)
    {
	    select -r $bifrostContainers; 

	    float $startFrame = `playbackOptions -q -minTime`;
	    float $endFrame = `playbackOptions -q -maxTime`;
	    float $difference = $endFrame - $startFrame + 1;

	    string $newFilename = `file -q -sn -shn`;
	    string $buffer2[];
		$num = `tokenize ($newFilename) (".") ($buffer2)`;
		string $cleanName = $buffer2[0];

		//local cache path
		string $userMayaPath = getenv("MAYA_APP_DIR");
		string $localCachePath = $userMayaPath+"/projects/default/cache/bifrost/"+$cleanName;

	    for($i=$startFrame;$i<=$endFrame;$i++)
		{
			//cache frame
			if($doCache == 1){
	    		doCreateBifrostCache 5 {"3", $i, $i, $localCachePath,"","bif","0","2","0","simulation,none" } ;
	    	}
	    	if($doMesh == 1){
	    		doCreateBifrostCache 5 {"3", $i, $i, $localCachePath,"","bif","0","3","0","none,mesh" } ;
	    	}
	    	//playblast frame
	    	if($doPlayblast == 1){
	    		playblast  -format image -startTime $i -endTime $i -filename ("playblasts/" + $cleanName + "/" +$cleanName) -sequenceTime 0 -clearCache 1 -viewer 0 -showOrnaments 0 -fp 4 -percent 100 -compression "png" -quality 70 -widthHeight $camWidth $camHeight;
			}
			//log
	    	$percentDone = (floor(($i-$startFrame+1)/$difference*1000)*0.1);
	    	print ($i+" of "+$difference+" - "+$percentDone+"%"+"\n");
		}

	    //save file with cache
	    file -save;
	    
	    if($doCache == 1){
	    	print "Cache Done\n";
	    }
	    if($doPlayblast == 1){
	    	print "Playblast Done\n";
	    }

	    //make movie 
	    $currentProject = `workspace -q -rd`;
	    string $imageFiles = $currentProject+"/images/playblasts/" + $cleanName + "/" + $cleanName + ".%04d.png";
	    string $movieFile = $currentProject+"movies/" + $cleanName + ".mp4";
	    MakeMovie($imageFiles,$movieFile,$camWidth,$camHeight);
	}
}

//CacheBifrost("bifrostLiquid1");
