global proc cacheYetiFur()
{
    
    string $sel[] = `ls -sl`;
    string $shapes[] = `listRelatives -s $sel[0]`;
    string $node = $shapes[0];
    string $grooms[] = `listConnections -t "pgYetiGroom" $node`;
    
	//get project name
	string $projectdir = `workspace -q -rd`;

	//get scene name
	string $fileName = `file -q -sn -shortName`;
	string $buffer[];
	$numTokens = `tokenize $fileName "." $buffer`;
	string $folderName = $buffer[0];
	string $fullpath = ($projectdir + "cache/yeti/"+ $folderName);

	setAttr ($node+".fileMode") 0;
	//for($groom in $grooms)
	//{
		//setAttr ($groom+".doSimulation") $simulate;
	//}
	

	string $nodeParts[];
	tokenize $node ":" $nodeParts;
	$tokenSize = `size $nodeParts`;
	$nodeName = $nodeParts[$tokenSize -1];

	//set yeti node output 
	setAttr -type "string" ($node+".outputCacheFileName") ($fullpath +"/"+ $nodeName +"/"+ $nodeName +".%04d.fur");

	//set yeti node input 
	setAttr -type "string" ($node+".cacheFileName") ($fullpath +"/"+ $nodeName +"/"+ $nodeName +".%04d.fur");

	//create folder
	sysFile -makeDir $fullpath;
	sysFile -makeDir ($fullpath +"/"+ $nodeName);

	//get frame range
	float $startFrame = `playbackOptions -q -min`;
	float $endFrame = `playbackOptions -q -max`;

	select -r $node;
	//do the yeti cache
	pgYetiCommand -writeCache ($fullpath +"/"+ $nodeName +"/"+ $nodeName +".%04d.fur") -range $startFrame $endFrame -samples 5;

	//turn cache on
	setAttr ($node+".fileMode") 1;
	for($groom in $grooms)
	{
		setAttr ($groom+".doSimulation") 0;
	}
	
	//flush cache
	pgYetiCommand -flushGeometryCache;
	pgYetiCommand -flushTextureCache;
}
//cacheYetiFur(0)